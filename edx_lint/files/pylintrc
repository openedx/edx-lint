[MASTER]

# Specify a configuration file.
#rcfile=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=

# Pickle collected data for later comparisons.
persistent=yes

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=edx_lint.pylint,pylint_django,pylint_celery


[MESSAGES CONTROL]

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time. See also the "--disable" option for examples.
enable=
    # These are controlled by explicit choices in the pylintrc files
    blacklisted-name,
    line-too-long,

    # These affect the correctness of the code
    abstract-class-instantiated,
    abstract-method,
    access-member-before-definition,
    anomalous-backslash-in-string,
    anomalous-unicode-escape-in-string,
    arguments-differ,
    assert-on-tuple,
    assigning-non-slot,
    assignment-from-no-return,
    assignment-from-none,
    attribute-defined-outside-init,
    bad-except-order,
    bad-format-character,
    bad-format-string-key,
    bad-format-string,
    bad-open-mode,
    bad-reversed-sequence,
    bad-staticmethod-argument,
    bad-str-strip-call,
    bad-super-call,
    binary-op-exception,
    boolean-datetime,
    catching-non-exception,
    cell-var-from-loop,
    confusing-with-statement,
    continue-in-finally,
    dangerous-default-value,
    duplicate-argument-name,
    duplicate-bases,
    duplicate-except,
    duplicate-key,
    expression-not-assigned,
    format-combined-specification,
    format-needs-mapping,
    function-redefined,
    global-variable-undefined,
    import-error,
    import-self,
    inconsistent-mro,
    inherit-non-class,
    init-is-generator,
    invalid-all-object,
    invalid-format-index,
    invalid-length-returned,
    invalid-sequence-index,
    invalid-slice-index,
    invalid-slots-object,
    invalid-slots,
    invalid-unary-operand-type,
    logging-too-few-args,
    logging-too-many-args,
    logging-unsupported-format,
    lost-exception,
    method-hidden,
    misplaced-bare-raise,
    misplaced-future,
    missing-format-argument-key,
    missing-format-attribute,
    missing-format-string-key,
    no-member,
    no-method-argument,
    no-name-in-module,
    no-self-argument,
    no-value-for-parameter,
    non-iterator-returned,
    non-parent-method-called,
    nonexistent-operator,
    not-a-mapping,
    not-an-iterable,
    not-callable,
    not-context-manager,
    not-in-loop,
    pointless-statement,
    pointless-string-statement,
    raising-bad-type,
    raising-non-exception,
    redefined-builtin,
    redefined-outer-name,
    redundant-keyword-arg,
    repeated-keyword,
    return-arg-in-generator,
    return-in-init,
    return-outside-function,
    signature-differs,
    super-init-not-called,
    super-method-not-called,
    syntax-error,
    test-inherits-tests,
    too-few-format-args,
    too-many-format-args,
    too-many-function-args,
    translation-of-non-string,
    truncated-format-string,
    undefined-all-variable,
    undefined-loop-variable,
    undefined-variable,
    unexpected-keyword-arg,
    unexpected-special-method-signature,
    unpacking-non-sequence,
    unreachable,
    unsubscriptable-object,
    unsupported-binary-operation,
    unsupported-membership-test,
    unused-format-string-argument,
    unused-format-string-key,
    used-before-assignment,
    using-constant-test,
    yield-outside-function,

    # Checking failed for some reason
    astroid-error,
    fatal,
    method-check-failed,
    parse-error,
    raw-checker-failed,

    # Documentation is important
    empty-docstring,
    invalid-characters-in-docstring,
    missing-docstring,
    wrong-spelling-in-comment,
    wrong-spelling-in-docstring,

    # Unused code should be deleted
    unused-argument,
    unused-import,
    unused-variable,

    # These are dangerous!
    eval-used,
    exec-used,

    # These represent idiomatic python. Not adhering to them
    # will raise red flags with future readers.
    bad-classmethod-argument,
    bad-mcs-classmethod-argument,
    bad-mcs-method-argument,
    bare-except,
    broad-except,
    consider-iterating-dictionary,
    consider-using-enumerate,
    global-at-module-level,
    global-variable-not-assigned,
    literal-used-as-attribute,
    logging-format-interpolation,
    logging-not-lazy,
    multiple-imports,
    multiple-statements,
    no-classmethod-decorator,
    no-staticmethod-decorator,
    protected-access,
    redundant-unittest-assert,
    reimported,
    simplifiable-if-statement,
    simplifiable-range,
    singleton-comparison,
    superfluous-parens,
    unidiomatic-typecheck,
    unnecessary-lambda,
    unnecessary-pass,
    unnecessary-semicolon,
    unneeded-not,
    useless-else-on-loop,
    wrong-assert-type,

    # Don't use things that are deprecated
    deprecated-method,
    deprecated-module,

    # These help manage code complexity
    too-many-boolean-expressions,
    too-many-nested-blocks,
    too-many-statements,

    # Consistent import order makes finding where code is
    # imported from easier
    wildcard-import,
    wrong-import-order,
    wrong-import-position,

    # These should be auto-fixed by any competent editor
    missing-final-newline,
    mixed-line-endings,
    trailing-newlines,
    trailing-whitespace,
    unexpected-line-ending-format,

    # These attempt to limit pylint line-noise
    bad-inline-option,
    bad-option-value,
    deprecated-pragma,
    unrecognized-inline-option,
    useless-suppression,

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use"--disable=all --enable=classes
# --disable=W"
disable=
    # These should be left to the discretion of the reviewer
    bad-indentation,
    broad-exception-raised,
    consider-using-f-string,
    duplicate-code,
    file-ignored,
    fixme,
    global-statement,
    invalid-name,
    locally-disabled,
    no-else-return,
    suppressed-message,
    too-few-public-methods,
    too-many-ancestors,
    too-many-arguments,
    too-many-branches,
    too-many-instance-attributes,
    too-many-lines,
    too-many-locals,
    too-many-public-methods,
    too-many-return-statements,
    ungrouped-imports,
    unspecified-encoding,
    unused-wildcard-import,
    use-maxsplit-arg,

    # These are repo-specific
    feature-toggle-needs-doc,
    illegal-waffle-usage,

    # We want to allow developers to use f-strings for readability
    logging-fstring-interpolation,

[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html. You can also give a reporter class, eg
# mypackage.mymodule.MyReporterClass.
output-format=text

# Tells whether to display a full report or only the messages
reports=no

# Numeric scores are silly.
score=no

# Template used to display messages. This is a python new-style format string
# used to format the message information. See doc for all details
#msg-template=


[BASIC]

# Regular expression which should only match correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression which should only match correct module level names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__)|log|urlpatterns)$

# Regular expression which should only match correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression which should only match correct function names
# Normally limited to 30 chars, but test names can be as long as they want
function-rgx=([a-z_][a-z0-9_]{2,40}|test_[a-z0-9_]+)$

# Regular expression which should only match correct method names
# Normally, should be all lower, but some exceptions for unittest methods
method-rgx=([a-z_][a-z0-9_]{2,40}|setUp|set[Uu]pClass|tearDown|tear[Dd]ownClass|assert[A-Z]\w*|maxDiff|test_[a-z0-9_]+)$

# Regular expression which should only match correct instance attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct attribute names in class
# bodies
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Good variable names which should always be accepted, separated by a comma
good-names=f,i,j,k,db,ex,Run,_,__

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=__.*__$|test_.+|setUp$|setUpClass$|tearDown$|tearDownClass$|Meta$

# Minimum line length for functions/classes that require docstrings, shorter
# ones are exempt.
docstring-min-length=5


[FORMAT]

# Maximum number of characters on a single line.
max-line-length=120

# Regexp for a line that is allowed to be longer than the limit:
#
# - Lines containing URLs.
# - Lines containing code annotations (for example, PII annotations).
#
ignore-long-lines=^\s*(# )?((<?https?://\S+>?)|(\.\. \w+: .*))$

# Allow the body of an if to be on the same line as the test if there is no
# else.
single-line-if-stmt=no

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1
# tab).
indent-string='    '


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO


[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=no


[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamically set).
ignored-classes=SQLObject

# C Extension modules must be imported to be inspected.  For security reasons,
# this # is not done by default, but we expect all imported code to be run at
# some point anyway, so we explicitly allow it here
unsafe-load-any-extension=yes

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E0201 when accessed. Python regular
# expressions are accepted.
generated-members=
    REQUEST,
    acl_users,
    aq_parent,
    objects,
    DoesNotExist,
    can_read,
    can_write,
    get_url,
    size,
    content,
    status_code,
# For factory_boy factories
    create,
    build,
# For xblocks
    fields,
# For locations
    tag,
    org,
    course,
    category,
    name,
    revision,
# For django models
    _meta,


[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching the beginning of the name of dummy variables
# (i.e. not used).
dummy-variables-rgx=_|dummy|unused|.*_unused

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=


[CLASSES]

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=mcs


[DESIGN]

# Maximum number of arguments for function / method
max-args=5

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branches=12

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=7

# Minimum number of public methods for a class (see R0903).
min-public-methods=2

# Maximum number of public methods for a class (see R0904).
max-public-methods=20


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=Exception
